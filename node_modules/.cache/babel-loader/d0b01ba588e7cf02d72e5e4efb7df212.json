{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\NIKITA\\\\chat-app\\\\src\\\\components\\\\MessageForm.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { sendMessage, isTyping } from 'react-chat-engine';\nimport { SendOutlined, PictureOutlined } from '@ant-design/icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction MessageForm(props) {\n  _s();\n\n  const [value, setValue] = useState('');\n  const {\n    chatId,\n    creds\n  } = props;\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const text = value.trim();\n    if (text.length > 0) sendMessage(creds, chatId, {\n      text\n    });\n    setValue('');\n  };\n\n  const handleChange = event => {\n    setValue(event.target.value);\n    isTyping(props, chatId);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"message-form\",\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"message-input\",\n      placeholder: \"Send a message...\",\n      value: value,\n      onChange: handleChange,\n      onSubmit: handleSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"upload-button\",\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"image-button\",\n        children: /*#__PURE__*/_jsxDEV(PictureOutlined, {\n          className: \"picture-icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n\n_s(MessageForm, \"A2PXPeq8TepW328gUMM4+o8Xryo=\");\n\n_c = MessageForm;\nexport default MessageForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"MessageForm\");","map":{"version":3,"sources":["C:/Users/NIKITA/chat-app/src/components/MessageForm.jsx"],"names":["useState","sendMessage","isTyping","SendOutlined","PictureOutlined","MessageForm","props","value","setValue","chatId","creds","handleSubmit","event","preventDefault","text","trim","length","handleChange","target"],"mappings":";;;AAAA,SAAQA,QAAR,QAAuB,OAAvB;AACA,SAAQC,WAAR,EAAqBC,QAArB,QAAoC,mBAApC;AACA,SAAQC,YAAR,EAAqBC,eAArB,QAA4C,mBAA5C;;;AAEA,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AAAA;;AACxB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAmBR,QAAQ,CAAC,EAAD,CAAjC;AACA,QAAM;AAACS,IAAAA,MAAD;AAAQC,IAAAA;AAAR,MAAeJ,KAArB;;AAEA,QAAMK,YAAY,GAAGC,KAAD,IAAU;AAC1BA,IAAAA,KAAK,CAACC,cAAN;AAEA,UAAMC,IAAI,GAAGP,KAAK,CAACQ,IAAN,EAAb;AAEA,QAAGD,IAAI,CAACE,MAAL,GAAc,CAAjB,EAAoBf,WAAW,CAACS,KAAD,EAAOD,MAAP,EAAe;AAACK,MAAAA;AAAD,KAAf,CAAX;AAEpBN,IAAAA,QAAQ,CAAC,EAAD,CAAR;AACH,GARD;;AAUA,QAAMS,YAAY,GAAGL,KAAD,IAAU;AAC1BJ,IAAAA,QAAQ,CAACI,KAAK,CAACM,MAAN,CAAaX,KAAd,CAAR;AAEAL,IAAAA,QAAQ,CAACI,KAAD,EAAOG,MAAP,CAAR;AACH,GAJD;;AAMF,sBACE;AAAM,IAAA,SAAS,EAAC,cAAhB;AAA+B,IAAA,QAAQ,EAAGE,YAA1C;AAAA,4BACI;AACA,MAAA,SAAS,EAAC,eADV;AAEA,MAAA,WAAW,EAAC,mBAFZ;AAGA,MAAA,KAAK,EAAEJ,KAHP;AAIA,MAAA,QAAQ,EAAEU,YAJV;AAKA,MAAA,QAAQ,EAAEN;AALV;AAAA;AAAA;AAAA;AAAA,YADJ,eAQI;AAAO,MAAA,OAAO,EAAC,eAAf;AAAA,6BACI;AAAM,QAAA,SAAS,EAAC,cAAhB;AAAA,+BACI,QAAC,eAAD;AAAiB,UAAA,SAAS,EAAC;AAA3B;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YARJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD;;GApCQN,W;;KAAAA,W;AAsCT,eAAeA,WAAf","sourcesContent":["import {useState} from 'react'\r\nimport {sendMessage, isTyping} from 'react-chat-engine'\r\nimport {SendOutlined,PictureOutlined } from '@ant-design/icons'\r\n\r\nfunction MessageForm(props) {\r\n    const [value, setValue]= useState('')\r\n    const {chatId,creds}=props\r\n\r\n    const handleSubmit =(event) =>{\r\n        event.preventDefault()\r\n\r\n        const text = value.trim()\r\n\r\n        if(text.length > 0) sendMessage(creds,chatId, {text})\r\n        \r\n        setValue('')\r\n    }\r\n\r\n    const handleChange =(event) =>{\r\n        setValue(event.target.value)\r\n\r\n        isTyping(props,chatId)\r\n    }\r\n\r\n  return (\r\n    <form className='message-form' onSubmit ={handleSubmit}>\r\n        <input \r\n        className='message-input'\r\n        placeholder='Send a message...'\r\n        value={value}\r\n        onChange={handleChange} \r\n        onSubmit={handleSubmit}/>\r\n\r\n        <label htmlFor='upload-button'>\r\n            <span className='image-button'>\r\n                <PictureOutlined className='picture-icon'/>\r\n            </span>\r\n        </label>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default MessageForm"]},"metadata":{},"sourceType":"module"}